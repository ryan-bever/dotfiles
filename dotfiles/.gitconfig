[push]
    default = simple
[diff]
    # tool = meld
    tool = goland
[merge]
    # tool = meld
    tool = goland
    keepBackup = false
[difftool]
    prompt = false

# diffmerge
[mergetool "diffmerge"]
    cmd = /Applications/DiffMerge.app/Contents/MacOS/DiffMerge  --merge --result=$MERGED $LOCAL $BASE $REMOTE
[difftool "diffmerge"]
    cmd = /Applications/DiffMerge.app/Contents/MacOS/DiffMerge $LOCAL $REMOTE

# goland
[mergetool "goland"]
    cmd = /Applications/GoLand.app/Contents/MacOS/goland merge $LOCAL $MERGED $REMOTE
[difftool "goland"]
    cmd = /Applications/GoLand.app/Contents/MacOS/goland diff $LOCAL $REMOTE

# meld
[difftool "meld"]
    cmd = meld "$LOCAL" "$REMOTE"
[mergetool "meld"]
    # With Meld you can change the middle pane to be the partially merged file $MERGED or the common ancestor $BASE
    # Using the partially merged file is the most common but using the base is sometimes useful for messy merges
    cmd = meld "$LOCAL" "$MERGED" "$REMOTE" --output "$MERGED"
    # cmd = meld "$LOCAL" "$BASE" "$REMOTE" --output "$MERGED"

# sourcetree
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /Applications/Sourcetree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true

[core]
    excludesfile = /Users/rbever/.gitignore_global
    editor = vim
    pager = less -x1,5
[alias]
    #one-line log
    ll = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%an]" --decorate --date=short
    #l = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%an]" --decorate --date=short -15
    l = !"git --no-pager log --pretty=format:'%C(yellow)%h %ad%Cred%d %Creset%s%Cblue [%an]' --decorate --date=short -15"
    #last commit
    last = !"git --no-pager log -1 HEAD"
    #log graphs
    lg1 = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(black)%s%C(reset) %C(dim black)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
    lg2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(black)%s%C(reset) %C(dim black)- %an%C(reset)' --all
    lg = !"git lg1"

    bblame = log -p -M --follow --stat -- 

    a = add
    ap = add -p
    c = commit --verbose
    ca = commit -a --verbose
    cm = commit -m
    cam = commit -a -m
    m = commit --amend --verbose

    d = diff
    ds = diff --stat
    dc = diff --cached
    dom = diff origin/integration
    dlast = diff HEAD^ HEAD

    s = status
    ss = status -s
    co = checkout
    cob = checkout -b
    # list branches sorted by last modified
    b = "!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'"

    #use git unstage filename
    unstage = "reset HEAD --"
    visual = !gitk &

    # rebase
    squash = "rebase -i origin/trunk"
    rebasePreferMine = rebase -XTheirs
    mark = "commit --allow-empty -m 'Rebase Marker'"


    # list aliases
    la = "!git config -l | grep alias | cut -c 7-"

    # stash
    # Uses hack to get parameter: https://www.atlassian.com/blog/git/advanced-git-aliases
    stash-named = "!f() { git stash -u -m \"$1\"; }; f"
[credential]
	helper = store

# Source in local gitconfig i.e user settings
[include]
    path = ~/.gitconfig.local
[user]
	name = Ryan Bever
	email = rbever@nvidia.com
[filter "lfs"]
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
[url "git@github.com:"]
	insteadOf = https://github.com/
[init]
	defaultBranch = main
[url "ssh://git@gitlab-master.nvidia.com"]
	insteadOf = https://gitlab-master.nvidia.com

# Allow watch to work with alias
# https://unix.stackexchange.com/questions/25327/watch-command-alias-expansion
alias watch='watch --color '

# Some shortcuts for different directory listings
alias ls='ls -FGh --color'              # classify files in colour
alias ll='ls -l'                # long list
alias la='ls -A'                # all but . and ..
alias lla='ls -lA'              # all but . and ..
alias llah='ls -lAh'            # all but . and ..

#cd to git project root
alias cdr='cd "$(git rev-parse --show-toplevel)"'
alias rebase='git fetch && git rebase -i origin/integration'

alias egrep='egrep --color'
alias grep='egrep'

alias agi='ag --ignore-case'
alias ags='ag --case-sensitive' # --smart-case is the default

alias agl='ag --literal'
alias aglc='ag --context=2 --literal'
alias agli='ag --ignore-case --literal'
alias agls='ag --case-sensitive --literal'
alias agnt="ag --literal --ignore '*_test.py'"




alias please='sudo $(fc -ln -1)'


# k8s and astra
alias k="kubectl"
alias mk="minikube"
alias klog="kubectl logs --follow"
alias kdebug="kubectl run -n pcloud -i --rm --tty debug --image=alpine --restart=Never -- /bin/ash"

# This is so gross, but when using OCP the pod namespaces are so wide it wraps, which drives me crazy. So we can limit the output width because we know the pod namespace/names for ACC
# But because we have to wrap it in quotes to pass to watch and again for awk ther is a bunch of weird quote escaping here.
alias pod-watch="watch \"kubectl get pods -A | grep -E  \\\"(abc|xyz)\\\"  |      awk '{printf \\\"%-22s %-51s %-5s %-20s %-3s %s\\\n\\\", \\\$1,\\\$2,\\\$3,\\\$4,\\\$5,\\\$6}'        \""


# alias does not accept parameters but a function can be called just like an alias. For pname we need the $1
function pname () { kubectl get pods -o name --all-namespaces | grep $1 }
function dname () { kubectl get deployments.apps -o name --all-namespaces -lapp.kubernetes.io/name=$1 }
function klogo () { pname xyz | xargs kubectl logs --follow -c c-name -n ns-name | jqlogs }
alias kcdd="kubectl config use-context docker-desktop"


# docker-gc is no longer maintained in favor of docker system prune https://docs.docker.com/engine/reference/commandline/system_prune/
# Add images to /etc/docker-gc-exclude to exclude them from docker-gc
# alias docker-gc="docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v /etc:/etc -e FORCE_IMAGE_REMOVAL=1 -e FORCE_CONTAINER_REMOVAL=1 spotify/docker-gc"
alias docker-gc="docker system prune --volumes"

alias postman='open -a Postman'

alias ascii-colors='for i in {0..255}; do print -Pn "%K{$i}  %k%F{$i}${(l:3::0:)i}%f " ${${(M)$((i%6)):#3}:+$'\n'}; done'


function jqlogs() {
  jq -cr --raw-input '
    def levelColor: {
      "trace4": "\u001b[38;5;8m",
      "trace3": "\u001b[38;5;8m",
      "trace2": "\u001b[38;5;8m",
      "trace": "\u001b[38;5;2m",
      "debug": "\u001b[38;5;5m",
      "info": "\u001b[38;5;4m",
      "warn": "\u001b[38;5;3m",
      "error": "\u001b[38;5;1m",
      "fatal": "\u001b[38;5;1m"
    };
    def rpad($len; $fill): tostring | ($len - length) as $l | . + ($fill * $l)[0:$l];
    . as $line |
    try (
      fromjson |
      (
        # The 21.08 release used a "ts" field only one of these timestamp fields should print
        # "\u001b[38;5;3m" + (.ts | todateiso8601) + "\u001b[0m" + 
        "\u001b[38;5;3m" + .timestamp + "\u001b[0m" + "    " +
        (try(levelColor[.level]) catch "") + (.level | ascii_upcase | rpad(8; " ")) + "\u001b[0m" +
        "\u001b[38;5;6m" + (.logger | rpad(30;" "))[0:30] + "\u001b[0m" + 
        (try(levelColor[.level]) catch "") + "  " + .msg + "    " + "\u001b[0m" +
        (. | del(.ts, .timestamp, .level, .msg, .application, .component, .logger) | tojson | " \u001b[38;5;7m" + . + "\u001b[0m")
      )
    ) catch $line'
}

if [ -f ~/.aliasrc.local ]; then
    source ~/.aliasrc.local
fi
